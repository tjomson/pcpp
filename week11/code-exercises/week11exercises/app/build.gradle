/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

// Akka
def versions = [
  ScalaBinary: "2.13"
]

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // Akka
    implementation platform("com.typesafe.akka:akka-bom_${versions.ScalaBinary}:2.6.17")
    
    implementation "com.typesafe.akka:akka-actor-typed_${versions.ScalaBinary}"
    testImplementation "com.typesafe.akka:akka-actor-testkit-typed_${versions.ScalaBinary}"

    // Logger?
    implementation 'org.slf4j:slf4j-simple:1.7.32'
}

application {
    // Define the main class for the application.
    // This shows a deprecation for Gradle 8, but the new solution is not backwards compatible, e.g., Gradle 6.3
    mainClassName = project.hasProperty("mainClass") ? project.getProperty("mainClass") : "NULL"
}

// Uncomment to run the solution while the skeleton is in main/java/mobilepayment/
// sourceSets {
//     main {
//         java {
//             srcDirs = ['src']
//             exclude 'main/java/mobilepayment/'
//         }
//     }
// }

run {
    // Use stdin
    standardInput = System.in
}
